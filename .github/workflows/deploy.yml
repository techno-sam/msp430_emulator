name: Deploy
# inspired by:
# https://dzfrias.dev/blog/deploy-rust-cross-platform-github-actions
# https://jondot.medium.com/building-rust-on-multiple-platforms-using-github-6f3e6f8b8458

permissions:
  contents: write

on:
  push:
    tags:
      # Regex for a version number such as 0.2.1
      - "[0-9]+.[0-9]+.[0-9]+"

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-upload:
    name: Build and upload
    strategy:
      matrix:
        # You can add more, for any target you'd like!
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            flutter-target: linux
            do_cross: false

          #- build: macos
          #  os: macos-latest
          #  target: x86_64-apple-darwin
          #  do_cross: false

          - build: windows-gnu
            os: windows-latest
            target: x86_64-pc-windows-gnu
            flutter-target: windows
            do_cross: false
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        # Or @nightly if you want
        uses: dtolnay/rust-toolchain@stable
        # Arguments to pass in
        with:
          # Make Rust compile to our target (defined in the matrix)
          targets: ${{ matrix.target }}
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable' # or: 'beta', 'dev' or 'master'
          architecture: x64
      - name: Prepare Flutter
        shell: bash
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            sudo apt-get update -y
            sudo apt-get install -y ninja-build libgtk-3-dev
          fi
      - run: flutter --version
      - name: Get the release version from the tag
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: Build Rust
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.do_cross }}
          command: build
          args: --verbose --release --target ${{ matrix.target }}
      - name: Debug Rust Build
        shell: bash
        run: |
          echo "directory: target"
          ls target
          echo "directory: target/${{ matrix.target }}"
          ls "target/${{ matrix.target }}"
          echo "directory: target/release"
          ls target/release
          cp "target/${{ matrix.target }}/release/*" "target/release/"
          echo "directory: target/release (after copy)"
          ls target/release
      - name: Build Flutter/Dart
        shell: bash
        run: flutter build ${{ matrix.flutter-target }} --release -v
      - name: Build archive
        shell: bash
        run: |
          # Replace with the name of your binary
          binary_name="msp430_emulator"
          
          dirname="$binary_name-${{ env.VERSION }}-${{ matrix.target }}"
          mkdir "$dirname"
          mv "build/${{ matrix.flutter-target }}/x64/release/bundle/*" "$dirname"
          
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            7z a "$dirname.zip" "$dirname"
            echo "ASSET=$dirname.zip" >> $GITHUB_ENV
          else
            tar -czf "$dirname.tar.gz" "$dirname"
            echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV
          fi
      - name: Upload the binaries
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ env.ASSET }}